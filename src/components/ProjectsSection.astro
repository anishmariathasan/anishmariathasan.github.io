---
// src/components/ProjectsSection.astro
const projects = [
  {
    title: "OedaSock (Imperial HCARD Competition Winner)",
    role: "Project Lead",
    date: "Jan 2025 - Present",
    description: "OedaSock is an innovative smart compression device, with an accompanying mobile app, designed to actively manage leg swelling (oedema).",
    fullDescription: [
      "OedaSock is an innovative smart compression device designed to actively manage leg swelling (oedema). It placed first in the HCARD Imperial Module competition.",
      "It uses integrated stretch sensors to detect changes in foot size and automatically applies targeted pneumatic compression via an embedded sock/cuff, offering a more comfortable and responsive alternative to traditional garments. All of this can be manually adjusted through the accompanying app, which has user login functionality to track their oedema progress and other biometric data for better clinical treatment."
    ],
    tags: ["Kotlin", "Android", "Arduino/C++", "ESP32", "Firestore", "BLE", "Hardware"],
    githubLink: "https://github.com/anishmariathasan/hcard",
    images: [
      {
        src: "/images/product.jpg",
        alt: "OedaSock device prototype"
      },
      {
        src: "/images/loginmain.png",
        alt: "OedaSock mobile app interface"
      },
      {
        src: "/images/demo.jpg",
        alt: "OedaSock demonstration photo"
      },
      {
        src: "/images/demovideo.mp4",
        alt: "OedaSock demonstration video",
        type: "video"
      }
    ]
  },
  {
    title: "Therakey",
    role: "Project Co-Lead",
    date: "Oct 2023 - June 2024",
    description: "Co-led development of an arthritis rehabilitation device, designing hardware circuits and writing firmware.",
    tags: ["Embedded C", "Raspberry Pico", "Hardware Design", "Rehabilitation Tech"],
    link: "#",
  },
  {
    title: "Software Engineering Internship Project ('Moonwall')",
    role: "Intern Developer",
    date: "Summer 2024 (During Internship)",
    description: "Built an automated Python tool for data aggregation, visualisation & analysis to significantly enhance team efficiency at Oxford Nanopore.",
    tags: ["Python", "Data Visualisation", "Automation", "Stakeholder Feedback"],
    link: "#",
  },
  {
    title: "Firmware Engineer Internship Work",
    role: "Intern Developer",
    date: "Summer 2023 (During Internship)",
    description: "Assisted in developing a medical device hardware system and C firmware for Thermetrix Ltd. using Raspberry Pico.",
    tags: ["Embedded C", "Raspberry Pico", "Hardware", "Medical Device"],
    link: "#",
  },
  {
    title: "PPE Redistribution App",
    role: "Developer",
    date: "2020",
    description: "Developed a Java mobile app using Firebase Realtime Database to facilitate PPE redistribution during the COVID-19 pandemic.",
    tags: ["Java", "Android", "Firebase", "Mobile App", "Social Impact", "Boredom", "NHS-X is a pain"],
    link: "#",
  },
  {
    title: "Personal Website (Previous Version)",
    role: "Developer",
    date: "2018 - 2020",
    description: "Built a personal website using Python/Django for the back-end and HTML/CSS for the front-end.",
    tags: ["Python", "Django", "HTML", "CSS", "Web Development"],
    link: "#",
  },
  {
    title: "Mobile Game Development ('Squashed Orange')",
    role: "Developer",
    date: "2017 - 2019",
    description: "Developed and sold mobile games on Google Play/Microsoft Store using the Unity engine.",
    tags: ["C#", "Unity", "Game Development", "Mobile","Nerdiness", "Google Play Store", "Windows Store"],
    link: "#",
  },
];
---
<section id="projects" class="py-16 md:py-24 bg-[#f5f0e9]">
  <div class="container mx-auto px-4">
    <h2 class="text-3xl md:text-4xl font-bold text-center mb-12 animate-on-scroll">
      Projects & Experience Highlights
    </h2>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {projects.map((project, index) => (
        <div
          class={`project-card bg-gray-800 p-6 rounded-lg shadow-xl flex flex-col animate-on-scroll delay-${index * 50} cursor-pointer`}
          onclick={`window.openProjectModal(${JSON.stringify(project)})`}
        >
          <div class="flex justify-between items-start">
            <div>
              <h3 class="text-xl font-bold mb-1 text-teal-500">
                {project.title}
              </h3>
              <p class="text-sm text-gray-400">
                {project.date}
              </p>
              {project.role && (
                <p class="text-sm text-gray-400 mt-1">
                  {project.role}
                </p>
              )}
            </div>
            {project.githubLink && (
              <a
                href={project.githubLink}
                target="_blank"
                rel="noopener noreferrer"
                class="ml-4"
                aria-label="View on GitHub"
                onclick="event.stopPropagation()"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-6 w-6 text-teal-500 hover:text-teal-600 transition-colors duration-150"
                  viewBox="0 0 24 24"
                  fill="currentColor"
                >
                  <title>GitHub</title>
                  <path
                    d="M12 .5C5.649.5.5 5.649.5 12c0 5.094 3.292 9.41 7.865 10.942.575.106.785-.25.785-.557 0-.274-.01-1.189-.015-2.156-3.2.696-3.875-1.542-3.875-1.542-.523-1.333-1.276-1.688-1.276-1.688-1.043-.713.08-.699.08-.699 1.152.082 1.758 1.184 1.758 1.184 1.026 1.757 2.693 1.25 3.348.957.104-.744.402-1.25.731-1.537-2.555-.29-5.242-1.277-5.242-5.687 0-1.257.45-2.284 1.184-3.089-.119-.29-.513-1.462.113-3.048 0 0 .967-.31 3.168 1.18.918-.255 1.902-.382 2.88-.387.979.005 1.962.132 2.882.387 2.2-1.49 3.166-1.18 3.166-1.18.628 1.586.233 2.758.115 3.048.737.805 1.184 1.832 1.184 3.089 0 4.42-2.692 5.392-5.254 5.678.413.356.782 1.062.782 2.14 0 1.545-.014 2.79-.014 3.168 0 .31.207.67.792.557C20.71 21.408 24 17.094 24 12c0-6.351-5.149-11.5-12-11.5z"
                  />
                </svg>
              </a>
            )}
          </div>
          <p class="text-gray-300 mt-4 mb-4 flex-grow">
            {project.description}
          </p>
          <div class="mt-auto pt-4 border-t border-gray-700/50">
            <div class="flex flex-wrap gap-2">
              {project.tags.map((tag) => (
                <span class="bg-gray-700 text-gray-300 text-xs font-semibold px-2.5 py-0.5 rounded">
                  {tag}
                </span>
              ))}
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  /* ---------------------------------------- */
  /* SCROLL-IN ANIMATION                      */
  /* ---------------------------------------- */
  .animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }
  .animate-on-scroll.is-visible {
    opacity: 1;
    transform: translateY(0);
  }
  .delay-0 { transition-delay: 0s; }
  .delay-100 { transition-delay: 0.1s; }
  .delay-200 { transition-delay: 0.2s; }
  .delay-300 { transition-delay: 0.3s; }
  .delay-400 { transition-delay: 0.4s; }
  .delay-500 { transition-delay: 0.5s; }
  .delay-600 { transition-delay: 0.6s; }
  .delay-700 { transition-delay: 0.7s; }

  /* ---------------------------------------- */
  /* CARD HOVER EFFECTS                       */
  /* ---------------------------------------- */
  .project-card {
    cursor: pointer;
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
  }
  .project-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }
</style>

<script type="module">
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);

  document.addEventListener("DOMContentLoaded", () => {
    // GSAP fade-in on scroll
    gsap.utils.toArray(".animate-on-scroll").forEach((el) => {
      gsap.to(el, {
        opacity: 1,
        y: 0,
        duration: 0.6,
        ease: "power2.out",
        scrollTrigger: {
          trigger: el,
          start: "top 90%",
          toggleActions: "play none none none",
        },
      });
    });

    // Fallback IntersectionObserver
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("is-visible");
          }
        });
      },
      { threshold: 0.1 }
    );
    document.querySelectorAll(".animate-on-scroll").forEach((el) => observer.observe(el));
  });
</script>